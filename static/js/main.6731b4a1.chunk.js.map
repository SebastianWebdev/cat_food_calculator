{"version":3,"sources":["components/App.tsx","components/calculator.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","paper","minHeight","App","classes","Paper","className","mainContainer","display","flexWrap","flexDirection","justifyContent","typography","textAlign","marginTop","flexBasis","container","height","padding","gridItems","resultsPaper","resultContainer","resultsNames","resultsDivider","width","Calculator","useState","proteins","setProteins","fat","setFat","ash","setAsh","fiber","setFiber","wet","setWet","numberedValues","useMemo","p","Number","w","f","a","fi","valid","filled","result","dryMass","carbs","name","unit","value","key","Container","Alert","severity","AlertTitle","elevation","Grid","alignItems","spacing","item","Typography","FormControl","TextField","type","label","onChange","evt","target","error","map","r","toFixed","Divider","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createTheme","components","MuiCssBaseline","styleOverrides","body","color","backgroundColor","palette","mode","primary","main","contrastText","secondary","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"wLAIMA,EAAYC,YAAW,CAC3BC,MAAO,CACLC,UAAW,WAIR,SAASC,IACd,IAAMC,EAAUL,IAChB,OACE,cAACM,EAAA,EAAD,CAAOC,UAAWF,EAAQH,MAA1B,SACE,cAAC,EAAD,M,oFCAAF,EAAYC,YAAW,CAC3BO,cAAe,CACbL,UAAW,QACXM,QAAS,iBACTC,SAAU,SACVC,cAAe,SACfC,eAAgB,UAElBC,WAAY,CACVC,UAAW,SACXC,UAAW,GACXC,UAAW,QAEbC,UAAW,CACTC,OAAQ,OACRC,QAAS,IAEXC,UAAW,CACTR,eAAgB,SAChBI,UAAW,OAEbK,aAAc,CACZN,UAAW,GACXI,QAAS,IAEXG,gBAAiB,CACfZ,SAAU,UAEZa,aAAc,CACZP,UAAW,OAEbQ,eAAgB,CACdC,MAAO,UAWEC,EAAa,WACxB,IAAMrB,EAAUL,IAChB,EAAgC2B,mBAAiB,IAAjD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsBF,mBAAiB,IAAvC,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAAsBJ,mBAAiB,IAAvC,mBAAOK,EAAP,KAAYC,EAAZ,KACA,EAA0BN,mBAAiB,IAA3C,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAAsBR,mBAAiB,IAAvC,mBAAOS,EAAP,KAAYC,EAAZ,KA2BMC,EAAiBC,mBAAQ,WAM7B,MAAO,CAAEC,EALCC,OAAOb,GAKLc,EAJFD,OAAOL,GAIFO,EAHLF,OAAOX,GAGCc,EAFRH,OAAOT,GAEIa,GADVJ,OAAOP,MAEjB,CAACN,EAAUM,EAAOJ,EAAKE,EAAKI,IAEzBU,EAAQP,mBAAQ,WAGpB,OAF2BD,EAAnBE,EAAmBF,EAAhBI,EAAgBJ,EAAbK,EAAaL,EAAVM,EAAUN,EAAPO,IAEN,MACb,CAACP,IAEES,EAASR,mBAAQ,WACrB,MACe,KAAbX,GAA6B,KAAVM,GAAwB,KAARJ,GAAsB,KAARE,GAAsB,KAARI,IAEhE,CAACR,EAAUM,EAAOJ,EAAKE,EAAKI,IAEzBY,EAAST,mBAAQ,WACrB,IAAQC,EAAmBF,EAAnBE,EAAGE,EAAgBJ,EAAhBI,EAAGC,EAAaL,EAAbK,EACRM,EAAU,IAAMP,EAGhBQ,EAAQD,EAAUT,EAAIG,EAJDL,EAAVM,EAAUN,EAAPO,GAQpB,MAAO,CACL,CAAEM,KAAM,aAAcC,KAAM,MAAOC,MAAOJ,EAASK,IAAK,GACxD,CAAEH,KAAM,cAAUC,KAAM,MAAOC,MARlBb,EAAIS,EAAW,IAQiBK,IAAK,GAClD,CAAEH,KAAM,gBAAYC,KAAM,MAAOC,MARrBV,EAAIM,EAAW,IAQmBK,IAAK,GACnD,CAAEH,KAAM,aAASC,KAAM,MAAOC,MAAOH,EAAOI,IAAK,GACjD,CAAEH,KAAM,aAASC,KAAM,MAAOC,MARhBH,EAAQD,EAAW,IAQYK,IAAK,GAClD,CAAEH,KAAM,YAAaC,KAAM,GAAIC,MARX,IAAJb,EAAc,IAAJG,EAAkB,IAARO,EAQaI,IAAK,MAEvD,CAAChB,IAMJ,OACE,eAACiB,EAAA,EAAD,CAAWhD,UAAWF,EAAQG,cAA9B,WACIsC,GACA,eAACU,EAAA,EAAD,CAAOC,SAAS,QAAhB,UACE,cAACC,EAAA,EAAD,oBADF,4DAKF,cAACpD,EAAA,EAAD,CAAOqD,UAAW,EAAlB,SACE,eAACC,EAAA,EAAD,CACErD,UAAWF,EAAQY,UACnB4C,WAAW,SACX5C,WAAS,EACT6C,QAAS,EAJX,UAME,cAACF,EAAA,EAAD,CAAMrD,UAAWF,EAAQQ,WAAYkD,MAAI,EAAzC,SACE,cAACC,EAAA,EAAD,4CAEF,cAACJ,EAAA,EAAD,CAAMrD,UAAWF,EAAQe,UAAWH,WAAS,EAAC8C,MAAI,EAAlD,SACE,cAACE,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,SACLC,MAAM,cACNf,MAAOzB,EACPyC,SA7Fe,SAC3BC,GAEAzC,EAAYyC,EAAIC,OAAOlB,QA2FXmB,OAAQ1B,QAId,cAACc,EAAA,EAAD,CAAMrD,UAAWF,EAAQe,UAAWH,WAAS,EAAC8C,MAAI,EAAlD,SACE,cAACE,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,SACLC,MAAM,eACNC,SAlGU,SACtBC,GAEAvC,EAAOuC,EAAIC,OAAOlB,QAgGNA,MAAOvB,EACP0C,OAAQ1B,QAId,cAACc,EAAA,EAAD,CAAMrD,UAAWF,EAAQe,UAAWH,WAAS,EAAC8C,MAAI,EAAlD,SACE,cAACE,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,SACLC,MAAM,iBACNC,SAxGU,SACtBC,GAEArC,EAAOqC,EAAIC,OAAOlB,QAsGNA,MAAOrB,EACPwC,OAAQ1B,QAId,cAACc,EAAA,EAAD,CAAMrD,UAAWF,EAAQe,UAAWH,WAAS,EAAC8C,MAAI,EAAlD,SACE,cAACE,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,SACLC,MAAM,iBACNC,SA9GY,SACxBC,GAEAnC,EAASmC,EAAIC,OAAOlB,QA4GRA,MAAOnB,EACPsC,OAAQ1B,QAId,cAACc,EAAA,EAAD,CAAMrD,UAAWF,EAAQe,UAAWH,WAAS,EAAC8C,MAAI,EAAlD,SACE,cAACE,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,SACLC,MAAM,cACNC,SApHU,SACtBC,GAEAjC,EAAOiC,EAAIC,OAAOlB,QAkHNA,MAAOjB,EACPoC,OAAQ1B,aAMlB,cAACxC,EAAA,EAAD,CAAOC,UAAWF,EAAQgB,aAAcsC,UAAW,EAAnD,SACE,cAACC,EAAA,EAAD,CAAM3C,WAAS,EAAf,SACG+B,EAAOyB,KAAI,SAACC,GAAD,OACV,eAACd,EAAA,EAAD,CAEErD,UAAWF,EAAQiB,gBACnBL,WAAS,EACT8C,MAAI,EAJN,UAME,cAACH,EAAA,EAAD,CAAMrD,UAAWF,EAAQkB,aAAcwC,MAAI,EAA3C,SACE,cAACC,EAAA,EAAD,oBAAgBU,EAAEvB,KAAlB,YAA0BuB,EAAEtB,UAE9B,cAACQ,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,qBA5FeX,EA4FqBqB,EAAErB,MA3F3CN,GAAUD,EAAQO,EAAMsB,QAAQ,GAAK,QA6FlC,cAACC,EAAA,EAAD,CAASrE,UAAWF,EAAQmB,mBAXvBkD,EAAEpB,KAnFS,IAACD,aCtHzBwB,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DA0CnC,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,+GAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAC7B,GACNyB,QAAQzB,MAAM,4CAA6CA,MCjGjE,IAYe8B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,0BCDRO,EAAQC,YAAY,CACxBC,WAAY,CACVC,eAAgB,CACdC,eAAgB,CACdC,KAAM,CACJC,MAAO,UACPC,gBAAiB,OACjB,OAAQ,CACND,MAAO,aAMjBE,QAAS,CACPC,KAAM,OACNC,QAAS,CACPC,KAAM,UACNC,aAAc,WAEhBC,UAAW,CACTF,KAAM,cAKZG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAACC,EAAA,EAAD,CAAejB,MAAOA,EAAtB,UACE,cAACkB,EAAA,EAAD,IACA,cAAC5H,EAAD,SAGJ6H,SAASC,eAAe,SFhBnB,SAAkB7C,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI6C,IAAIC,uBAAwBrD,OAAOC,SAASqD,MACpDC,SAAWvD,OAAOC,SAASsD,OAIvC,OAGFvD,OAAOwD,iBAAiB,QAAQ,WAC9B,IAAMnD,EAAK,UAAMgD,uBAAN,sBAEPvD,IAgEV,SAAiCO,EAAeC,GAE9CmD,MAAMpD,EAAO,CACXqD,QAAS,CAAE,iBAAkB,YAE5BhD,MAAK,SAACiD,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CxD,UAAUC,cAAcwD,MAAMtD,MAAK,SAACC,GAClCA,EAAasD,aAAavD,MAAK,WAC7BV,OAAOC,SAASiE,eAKpB9D,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IAAI,oEAtFVgD,CAAwB9D,EAAOC,GAI/BC,UAAUC,cAAcwD,MAAMtD,MAAK,WACjCQ,QAAQC,IACN,+GAMJf,EAAgBC,EAAOC,OEN/B8D,GAKA7C,M","file":"static/js/main.6731b4a1.chunk.js","sourcesContent":["import Paper from \"@mui/material/Paper\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Calculator } from \"../components\";\n\nconst useStyles = makeStyles({\n  paper: {\n    minHeight: \"100vh\",\n  },\n});\n\nexport function App() {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.paper}>\n      <Calculator />\n    </Paper>\n  );\n}\n","import { useState, useMemo } from \"react\";\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  FormControl,\r\n  Typography,\r\n  Paper,\r\n  Container,\r\n  Divider,\r\n  Alert,\r\n  AlertTitle,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  mainContainer: {\r\n    minHeight: \"100vh\",\r\n    display: \"flex!important\",\r\n    flexWrap: \"nowrap\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n  typography: {\r\n    textAlign: \"center\",\r\n    marginTop: 10,\r\n    flexBasis: \"100%\",\r\n  },\r\n  container: {\r\n    height: \"100%\",\r\n    padding: 10,\r\n  },\r\n  gridItems: {\r\n    justifyContent: \"center\",\r\n    flexBasis: \"25%\",\r\n  },\r\n  resultsPaper: {\r\n    marginTop: 10,\r\n    padding: 10,\r\n  },\r\n  resultContainer: {\r\n    flexWrap: \"nowrap\",\r\n  },\r\n  resultsNames: {\r\n    flexBasis: \"50%\",\r\n  },\r\n  resultsDivider: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\ninterface Result {\r\n  name: string;\r\n  unit: string;\r\n  value: number;\r\n  key: string | number;\r\n}\r\n\r\nexport const Calculator = () => {\r\n  const classes = useStyles();\r\n  const [proteins, setProteins] = useState<string>(\"\");\r\n  const [fat, setFat] = useState<string>(\"\");\r\n  const [ash, setAsh] = useState<string>(\"\");\r\n  const [fiber, setFiber] = useState<string>(\"\");\r\n  const [wet, setWet] = useState<string>(\"\");\r\n\r\n  const handleProteinsChange = (\r\n    evt: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) => {\r\n    setProteins(evt.target.value);\r\n  };\r\n  const handleFatChange = (\r\n    evt: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) => {\r\n    setFat(evt.target.value);\r\n  };\r\n  const handleAshChange = (\r\n    evt: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) => {\r\n    setAsh(evt.target.value);\r\n  };\r\n  const handleFibreChange = (\r\n    evt: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) => {\r\n    setFiber(evt.target.value);\r\n  };\r\n  const handleWetChange = (\r\n    evt: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) => {\r\n    setWet(evt.target.value);\r\n  };\r\n  const numberedValues = useMemo(() => {\r\n    const p = Number(proteins);\r\n    const w = Number(wet);\r\n    const f = Number(fat);\r\n    const a = Number(ash);\r\n    const fi = Number(fiber);\r\n    return { p, w, f, a, fi };\r\n  }, [proteins, fiber, fat, ash, wet]);\r\n\r\n  const valid = useMemo(() => {\r\n    const { p, w, f, a, fi } = numberedValues;\r\n    const sum = p + w + f + a + fi;\r\n    return sum <= 100;\r\n  }, [numberedValues]);\r\n\r\n  const filled = useMemo(() => {\r\n    return (\r\n      proteins !== \"\" && fiber !== \"\" && fat !== \"\" && ash !== \"\" && wet !== \"\"\r\n    );\r\n  }, [proteins, fiber, fat, ash, wet]);\r\n\r\n  const result = useMemo((): Result[] => {\r\n    const { p, w, f, a, fi } = numberedValues;\r\n    const dryMass = 100 - w;\r\n    const protP = (p / dryMass) * 100;\r\n    const fatP = (f / dryMass) * 100;\r\n    const carbs = dryMass - p - f - a - fi;\r\n    const carbsP = (carbs / dryMass) * 100;\r\n    const calorific = p * 3.5 + f * 8.5 + carbs * 3.5;\r\n\r\n    return [\r\n      { name: \"Sucha masa\", unit: \"[g]\", value: dryMass, key: 1 },\r\n      { name: \"Białko\", unit: \"[%]\", value: protP, key: 2 },\r\n      { name: \"Tłuszcze\", unit: \"[%]\", value: fatP, key: 3 },\r\n      { name: \"Węgle\", unit: \"[g]\", value: carbs, key: 4 },\r\n      { name: \"Węgle\", unit: \"[%]\", value: carbsP, key: 5 },\r\n      { name: \"kcal/100g\", unit: \"\", value: calorific, key: 6 },\r\n    ];\r\n  }, [numberedValues]);\r\n\r\n  const resultValueRenderer = (value: number) => {\r\n    return filled && valid ? value.toFixed(2) : 0;\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.mainContainer}>\r\n      {!valid && (\r\n        <Alert severity=\"error\">\r\n          <AlertTitle>Error</AlertTitle>\r\n          Suma składników jest większa niż 100\r\n        </Alert>\r\n      )}\r\n      <Paper elevation={3}>\r\n        <Grid\r\n          className={classes.container}\r\n          alignItems=\"center\"\r\n          container\r\n          spacing={2}\r\n        >\r\n          <Grid className={classes.typography} item>\r\n            <Typography>Wprowadź wartości</Typography>\r\n          </Grid>\r\n          <Grid className={classes.gridItems} container item>\r\n            <FormControl>\r\n              <TextField\r\n                type=\"number\"\r\n                label=\"Białko\"\r\n                value={proteins}\r\n                onChange={handleProteinsChange}\r\n                error={!valid}\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid className={classes.gridItems} container item>\r\n            <FormControl>\r\n              <TextField\r\n                type=\"number\"\r\n                label=\"Tłuszcz\"\r\n                onChange={handleFatChange}\r\n                value={fat}\r\n                error={!valid}\r\n              ></TextField>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid className={classes.gridItems} container item>\r\n            <FormControl>\r\n              <TextField\r\n                type=\"number\"\r\n                label=\"Popiół\"\r\n                onChange={handleAshChange}\r\n                value={ash}\r\n                error={!valid}\r\n              ></TextField>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid className={classes.gridItems} container item>\r\n            <FormControl>\r\n              <TextField\r\n                type=\"number\"\r\n                label=\"Włókno\"\r\n                onChange={handleFibreChange}\r\n                value={fiber}\r\n                error={!valid}\r\n              ></TextField>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid className={classes.gridItems} container item>\r\n            <FormControl>\r\n              <TextField\r\n                type=\"number\"\r\n                label=\"Wilgoć\"\r\n                onChange={handleWetChange}\r\n                value={wet}\r\n                error={!valid}\r\n              ></TextField>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      <Paper className={classes.resultsPaper} elevation={3}>\r\n        <Grid container>\r\n          {result.map((r) => (\r\n            <Grid\r\n              key={r.key}\r\n              className={classes.resultContainer}\r\n              container\r\n              item\r\n            >\r\n              <Grid className={classes.resultsNames} item>\r\n                <Typography>{`${r.name} ${r.unit}`}</Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography>{`${resultValueRenderer(r.value)}`}</Typography>\r\n              </Grid>\r\n              <Divider className={classes.resultsDivider} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nconst theme = createTheme({\n  components: {\n    MuiCssBaseline: {\n      styleOverrides: {\n        body: {\n          color: \"darkred\",\n          backgroundColor: \"grey\",\n          \"& h1\": {\n            color: \"black\",\n          },\n        },\n      },\n    },\n  },\n  palette: {\n    mode: \"dark\",\n    primary: {\n      main: \"#ff6f61\",\n      contrastText: \"#ffffff\",\n    },\n    secondary: {\n      main: \"#ffc322\",\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}